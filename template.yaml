AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  cyberagent-go-academy-lambda
  
  Sample SAM Template for cyberagent-go-academy-lambda

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 200

Resources:
  CreateOutPatientHistories:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: app/
      Handler: app
      Runtime: go1.x
      Architectures:
        - x86_64
      Events:
        ScheduleEvent:
          Type: Schedule
          Properties:
            Schedule: cron(0 10 * * *)
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables:
          PARAM1: VALUE
      Role: arn:aws:iam::880843126767:role/go-academy-lambda
  CreateCityOutPatientBatch:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: app/batch/create_city_patient
      Handler: create_city_patient
      Runtime: go1.x
      Architectures:
        - x86_64
      Events:
        ScheduleEvent:
          Type: Schedule
          Properties:
            Schedule: cron(0 11 * * *)
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables:
          PARAM1: VALUE
      Role: arn:aws:iam::880843126767:role/go-academy-lambda
  SlackNotificationFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: app/api/slack_notification/
      Handler: slack_notification
      Runtime: go1.x
      Architectures:
        - x86_64
      Events:
        CatchAll:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /notification
            Method: GET
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables:
          PARAM1: VALUE
      Role: arn:aws:iam::880843126767:role/go-academy-lambda
  GetCityPatientFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: app/api/get_city_outpatient/
      Handler: get_city_outpatient
      Runtime: go1.x
      Architectures:
        - x86_64
      Events:
        CatchAll:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /city_outpatients
            Method: GET
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables:
          PARAM1: VALUE
      Role: arn:aws:iam::880843126767:role/go-academy-lambda

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  CreateOutPatientHistories:
    Description: "Create outpatient histories from corona open data"
    Value: !GetAtt CreateOutPatientHistories.Arn
  CreateCityOutPatientBatch:
    Description: "Create city outpatient from tmp data"
    Value: !GetAtt CreateCityOutPatientBatch.Arn
  SlackNotificationAPI:
    Description: "API Gateway endpoint URL for Prod environment for First Function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/notification"
  SlackNotificationFunction:
    Description: "Slack notification"
    Value: !GetAtt SlackNotificationFunction.Arn
  GetCityPatientAPI:
    Description: "API Gateway endpoint URL for Prod environment for First Function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/city_outpatients"
  GetCityPatientFunction:
    Description: "get city patient"
    Value: !GetAtt GetCityPatientFunction.Arn

