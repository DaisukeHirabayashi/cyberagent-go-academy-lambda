// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.21.9
// source: outpatient_history.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// OutpatientHistoryServiceClient is the client API for OutpatientHistoryService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type OutpatientHistoryServiceClient interface {
	GetOutpatientHistories(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (OutpatientHistoryService_GetOutpatientHistoriesClient, error)
}

type outpatientHistoryServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewOutpatientHistoryServiceClient(cc grpc.ClientConnInterface) OutpatientHistoryServiceClient {
	return &outpatientHistoryServiceClient{cc}
}

func (c *outpatientHistoryServiceClient) GetOutpatientHistories(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (OutpatientHistoryService_GetOutpatientHistoriesClient, error) {
	stream, err := c.cc.NewStream(ctx, &OutpatientHistoryService_ServiceDesc.Streams[0], "/proto.OutpatientHistoryService/GetOutpatientHistories", opts...)
	if err != nil {
		return nil, err
	}
	x := &outpatientHistoryServiceGetOutpatientHistoriesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type OutpatientHistoryService_GetOutpatientHistoriesClient interface {
	Recv() (*OutpatientHistory, error)
	grpc.ClientStream
}

type outpatientHistoryServiceGetOutpatientHistoriesClient struct {
	grpc.ClientStream
}

func (x *outpatientHistoryServiceGetOutpatientHistoriesClient) Recv() (*OutpatientHistory, error) {
	m := new(OutpatientHistory)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// OutpatientHistoryServiceServer is the server API for OutpatientHistoryService service.
// All implementations must embed UnimplementedOutpatientHistoryServiceServer
// for forward compatibility
type OutpatientHistoryServiceServer interface {
	GetOutpatientHistories(*emptypb.Empty, OutpatientHistoryService_GetOutpatientHistoriesServer) error
	mustEmbedUnimplementedOutpatientHistoryServiceServer()
}

// UnimplementedOutpatientHistoryServiceServer must be embedded to have forward compatible implementations.
type UnimplementedOutpatientHistoryServiceServer struct {
}

func (UnimplementedOutpatientHistoryServiceServer) GetOutpatientHistories(*emptypb.Empty, OutpatientHistoryService_GetOutpatientHistoriesServer) error {
	return status.Errorf(codes.Unimplemented, "method GetOutpatientHistories not implemented")
}
func (UnimplementedOutpatientHistoryServiceServer) mustEmbedUnimplementedOutpatientHistoryServiceServer() {
}

// UnsafeOutpatientHistoryServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to OutpatientHistoryServiceServer will
// result in compilation errors.
type UnsafeOutpatientHistoryServiceServer interface {
	mustEmbedUnimplementedOutpatientHistoryServiceServer()
}

func RegisterOutpatientHistoryServiceServer(s grpc.ServiceRegistrar, srv OutpatientHistoryServiceServer) {
	s.RegisterService(&OutpatientHistoryService_ServiceDesc, srv)
}

func _OutpatientHistoryService_GetOutpatientHistories_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(emptypb.Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(OutpatientHistoryServiceServer).GetOutpatientHistories(m, &outpatientHistoryServiceGetOutpatientHistoriesServer{stream})
}

type OutpatientHistoryService_GetOutpatientHistoriesServer interface {
	Send(*OutpatientHistory) error
	grpc.ServerStream
}

type outpatientHistoryServiceGetOutpatientHistoriesServer struct {
	grpc.ServerStream
}

func (x *outpatientHistoryServiceGetOutpatientHistoriesServer) Send(m *OutpatientHistory) error {
	return x.ServerStream.SendMsg(m)
}

// OutpatientHistoryService_ServiceDesc is the grpc.ServiceDesc for OutpatientHistoryService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var OutpatientHistoryService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "proto.OutpatientHistoryService",
	HandlerType: (*OutpatientHistoryServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetOutpatientHistories",
			Handler:       _OutpatientHistoryService_GetOutpatientHistories_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "outpatient_history.proto",
}
